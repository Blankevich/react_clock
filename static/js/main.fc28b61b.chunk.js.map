{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","handleClick","setState","this","window","setInterval","document","addEventListener","clearInterval","timeString","toLocaleTimeString","className","props","name","Component","getRandomName","value","now","toString","slice","App","hasClock","clockName","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,EAiBEC,YAAc,WACZ,IAAMH,EAAO,IAAIC,KAEjB,EAAKG,SAAS,CAAEJ,UApBpB,uDAOE,WACEK,KAAKH,QAAUI,OAAOC,aAAY,cAC/B,KACHC,SAASC,iBAAiB,cAAeJ,KAAKF,eAVlD,kCAaE,WACEG,OAAOI,cAAcL,KAAKH,WAd9B,oBAuBE,WACE,IACMS,EADWN,KAAKN,MAAdC,KACgBY,qBAExB,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,KAAKS,MAAMC,OAGb,YAED,sBAAMF,UAAU,cAAhB,SACIF,WApCZ,GAA2BK,aCN3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAWP,KAHf,EAMEf,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBM,SAASC,iBAAiB,eAAe,SAACgB,GACxCA,EAAMC,iBACN,EAAKtB,SAAS,CAAEmB,UAAU,OAG5Bf,SAASC,iBAAiB,SAAS,WACjC,EAAKL,SAAS,CAAEmB,UAAU,OAG5BlB,KAAKH,QAAUI,OAAOC,aAAY,WAChC,EAAKH,SAAS,CAAEoB,UAAWP,QAC1B,QApBP,kCAuBE,WACEX,OAAOI,cAAcL,KAAKH,WAxB9B,oBA2BE,WACE,MAAgCG,KAAKN,MAA7BwB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOR,KAAMS,WAjClC,GAAyBR,aCZzBW,IAASC,OACP,cAAC,EAAD,IACApB,SAASqB,eAAe,W","file":"static/js/main.fc28b61b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: Date,\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n    }, 1000);\n    document.addEventListener('contextmenu', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  handleClick = () => {\n    const date = new Date();\n\n    this.setState({ date });\n  };\n\n  render() {\n    const { date } = this.state;\n    const timeString = date.toLocaleTimeString();\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          { timeString }\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: getRandomName(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}